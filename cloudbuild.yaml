steps:
  # Install dependencies
  - name: node:20
    entrypoint: npm
    args: ['ci']

  # Run tests
  - name: node:20
    entrypoint: npm
    args: ['test']

  # Build the NestJS application
  - name: node:20
    entrypoint: npm
    args: ['run', 'build']

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/myapp:latest'
      - '--cache-from'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/myapp:latest'
      - '.'

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/myapp:latest'

# Define the default substitution variables
substitutions:
  _REGION: asia-southeast1
  _REPOSITORY: my-first-cloud-run-repo

# Define the image that will be built
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/myapp:latest'

# Set a longer timeout since NestJS builds can take a while
timeout: 1800s

# Optional: Cache npm packages between builds
options:
  machineType: 'E2_HIGHCPU_8'  # Use a powerful machine for faster builds
